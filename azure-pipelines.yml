jobs:
- job: BuildAndTest
  displayName: 'Build and Test'
  pool:
    vmImage: 'ubuntu-latest'
  steps:
  - script: npm install
    displayName: 'npm install'

  - script: npm run build
    displayName: 'npm run build'

  - script: npm test
    displayName: 'npm test'

- job: Deploy
  displayName: 'Deploy to Production'
  dependsOn: BuildAndTest
  pool:
    vmImage: 'ubuntu-latest'
  steps:
  - script: echo 'Deploying to production...'
    displayName: 'Deploy'

- job: SendNotification
  displayName: 'Send Email Notification on Build Failure'
  dependsOn: [BuildAndTest, Deploy]  # Ensure it runs after other jobs
  pool:
    vmImage: 'ubuntu-latest'
  condition: failed()
  steps:
  - task: PowerShell@2
    inputs:
      targetType: 'inline'
      script: |
        $emailFrom = "sarthakpokhrel8@example.com"
        $emailTo = "sarthakpokhrel3@gmail.com"
        $smtpServer = "smtp.gmail.com"  # Replace with your SMTP server address
        $smtpUsername = "sarthakpokhrel8"  # Replace with your SMTP username (if required)
        $smtpPassword = "esvpvqnydnstlryw"

        $subject = "Azure Pipeline Build Failed"
        $body = "The build for branch $(Build.SourceBranch) in pipeline $(System.DefinitionName) has failed. Check details at $(System.CollectionUri)$(System.TeamProject)/_build/results?buildId=$(Build.BuildId)"

        $smtpClient = New-Object Net.Mail.SmtpClient($smtpServer)
        $smtpClient.EnableSsl = $true
        $smtpClient.Credentials = New-Object System.Net.NetworkCredential($smtpUsername, $smtpPassword)
        $smtpClient.Send($emailFrom, $emailTo, $subject, $body)
